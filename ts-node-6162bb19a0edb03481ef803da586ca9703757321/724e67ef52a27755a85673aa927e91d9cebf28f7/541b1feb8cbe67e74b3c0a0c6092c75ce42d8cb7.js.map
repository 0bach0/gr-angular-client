{"version":3,"file":"/home/xubaxabu/Workspace/gr/client-angular/angular-seed-fix/tools/tasks/seed/build.assets.prod.ts","sources":["/home/xubaxabu/Workspace/gr/client-angular/angular-seed-fix/tools/tasks/seed/build.assets.prod.ts"],"names":[],"mappings":";AAAA,2BAA6B;AAC7B,6BAA4B;AAE5B,uCAAkC;AAGlC,IAAI,QAAQ,GAAG,UAAU,EAAO;IAC9B,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,IAAS,EAAE,EAAO;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,EAAE,CAAC;QACd,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAMF,iBAAS;IACP,IAAI,EAAE,GAAQ,OAAO,CAAC,cAAc,CAAC,CAAC;IACtC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACd,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,CAAC;QAC1B,WAAI,CAAC,gBAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,gBAAgB,EAAE,SAAS,EAAE,qBAAqB,CAAC;QACrF,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,eAAe,CAAC;QAC3C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC;QACxC,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QACzC,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;QAC1C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;QAC1C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;QAC1C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC;KAC5C,CAAC,MAAM,CAAC,gBAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport { join } from 'path';\n\nimport Config from '../../config';\n\n// TODO There should be more elegant to prevent empty directories from copying\nvar onlyDirs = function (es: any) {\n  return es.map(function (file: any, cb: any) {\n    if (file.stat.isFile()) {\n      return cb(null, file);\n    } else {\n      return cb();\n    }\n  });\n};\n\n/**\n * Executes the build process, copying the assets located in `src/client` over to the appropriate\n * `dist/prod` directory.\n */\nexport = () => {\n  let es: any = require('event-stream');\n  return gulp.src([\n    join(Config.APP_SRC, '**'),\n    join(Config.NPM_BASE, '@angular', 'service-worker', 'bundles', 'worker-basic.min.js'),\n    '!' + join(Config.APP_SRC, 'tsconfig.json'),\n    '!' + join(Config.APP_SRC, '**', '*.ts'),\n    '!' + join(Config.APP_SRC, '**', '*.css'),\n    '!' + join(Config.APP_SRC, '**', '*.html'),\n    '!' + join(Config.APP_SRC, '**', '*.scss'),\n    '!' + join(Config.APP_SRC, '**', '*.sass'),\n    '!' + join(Config.ASSETS_SRC, '**', '*.js')\n  ].concat(Config.TEMP_FILES.map((p) => { return '!' + p; })))\n    .pipe(onlyDirs(es))\n    .pipe(gulp.dest(Config.APP_DEST));\n};\n"]}